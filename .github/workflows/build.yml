name: Build OpenWRT for BPi-R2
on: push

jobs:
    build_in_docker:
        name: Builder
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Prepare
              run: ./0_prepare.sh
            - name: Load environment
              uses: c-py/action-dotenv-to-setenv@v1

            - name: Build Docker image
              run: docker build -t bpi_r2-openwrt --build-arg PUID=`id -u` --build-arg PGID=`id -g` .
            - name: Build images
              run: docker run --privileged -v $OUT_DIR:/out bpi_r2-openwrt

            - name: Create GH Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: OpenWRT BPi-R2 ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload SD card image
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ env.SD_IMAGE_FILE }}
                  asset_name: ${{ env.SD_IMAGE_FILE }}
                  asset_content_type: application/octet-stream
            - name: Upload EMMC image
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ env.EMMC_IMAGE_FILE }}
                  asset_name: ${{ env.EMMC_IMAGE_FILE }}
                  asset_content_type: application/octet-stream
            - name: Upload EMMC boot image
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ env.EMMC_BOOT0_FILE }}
                  asset_name: ${{ env.EMMC_BOOT0_FILE }}
                  asset_content_type: application/octet-stream
